import random
import string

def generate_random_text(min_length=3, max_length=1500):
    # Определяем буквы английского и русского алфавитов
    english_letters = string.ascii_letters  # a-zA-Z
    russian_letters = 'АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫИЭЮЯабвгдежзийклмнопрстуфхцчшщъыэюя'
    
    # Объединяем алфавиты
    all_letters = english_letters + russian_letters
    
    # Генерируем случайную длину текста
    text_length = random.randint(min_length, max_length)
    
    # Генерируем случайный текст
    random_text = ''.join(random.choice(all_letters) for _ in range(text_length))
    
    return random_text

# Пример использования
if __name__ == "__main__":
    generated_text = generate_random_text()
    print(generated_text)

https://disk.yandex.ru/d/ybl6Szriz24ADQ
В случае если захотите конвертировать файл,
     который уже находиться в формате WebP, или имеет такое же название,
     но другой формат то будет вывод, что такой файл уже существует.
     Может быть полезно если назовете новый
     файл в так же как существующий в формате WebP.  



Если вы попытаетесь конвертировать файл в формат WebP с тем же именем, что и уже существующий файл, вы увидите сообщение, что файл уже есть. Рекомендуется использовать другое имя для нового файла, чтобы избежать конфликта.


import pytest
from fastapi.testclient import TestClient
from app import app
import tempfile

client = TestClient(app)

@pytest.fixture
def temp_file():
    # Создаем временный файл для теста
    with tempfile.NamedTemporaryFile(delete=True, suffix=".txt") as f:
        # Записываем данные в файл
        f.write(b"Hello, this is a test file.")
        f.flush()  # Убедимся, что данные записаны в файл
        yield f  # Возвращаем временный файл для использования в тесте

def test_upload_file(temp_file):
    # Отправляем файл на эндпоинт
    with open(temp_file.name, "rb") as file:
        response = client.post(
            "/upload/",
            files={"file": (temp_file.name, file, "text/plain")}
        )
    
    assert response.status_code == 200
    assert response.json() == {
        "filename": temp_file.name.split("/")[-1],  # Имя файла
        "content_length": len(b"Hello, this is a test file.")  # Длина содержимого
    }
